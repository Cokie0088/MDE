<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAACAgAAABAAgAqAgAAB4DAAAgIAAAAQAgAKgQAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAADAAAAAAAAAAAAAAAAAAAAeA
        AAAAAAAAcAAAAAAAAAB7gAAAAAB3e4gwAAAAAAAHiLAAAHd7i4iIcAAAAAAAe4uHd7i4iIi4iHAAAAAA
        B4uIi4iIi4uLiPhwAAAAAAOIuLeLi4i4iLj4cAAAAAAHuIiLiLi4i4uI+HAAAAAAB7i4t4uIi4iIuPhw
        AAAAAAd7iIOIuIi4uIj4cAAAAAADiLi3uIuLiIuL+HAAAAAAB7iLiJi4iLi4iIgwAAAAAAe3iIuHi4uI
        i4uDAAAAAAAHi4uIt4i4i4iIMAAAAAAAA7iLiLe4iLiLi3AAAAAAAAeLiLh4i4uIuIgwAAAAAAAHt4uI
        t7iIuIuLgAAAAAAAB7i4i4mIuIuIiDAAAAAAAAe3iLiLiLiIuLiwAAAAAAAHe4uIt4uIuIi4cAAAAAAA
        A4uIi4mIuIuLiDAAAAAAAAe4i4h7iIuIiLhwAAAAAAAHt7iLh7i4i4uIsAAAAAAAB7iLiLeIi4i4i3AA
        AAAAAAe3iLh7i4i4i4gwAAAAAAAHuLiLh4i4i4i4cAAAAAAAB7eLiJuLiLiIi3AAAAAAAAe4uIt4iLiI
        uLhwAAAAAAAHuIt3i4uIuLiLcAAAAAAAB7iXe4i4i3d5hwAAAAAAAAdzi3eXdwAAAAAAAAAAAAADd4AA
        AAAAAAAAAAAAAP/f////n/9//x/wH/4fAB/8AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AD/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+AAAf/gA
        AH/4AAB/+AAA//gA///4f///KAAAACAAAABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAA
        AAA+an0AQWl7AEhtfgA/eZIAQHKHAE1ygwBCd44AR3eMAEd4jABTe4wAUXyOAE59kABUf5EARoKdAEeE
        ngBIgp0AVoacAFyHmQBTiJ8Aa4yaAEmGoQBOiKEAUomiAFaLowBSjKUAVIykAFyMoQBajqQAVY6oAFiP
        qABQkKsAUpKtAFWWsgBXmbYAWJq2AFmbuABmkaUAapGiAHGXpwB7nKsAf52qAHqerABeob8AZqW/AF6i
        wABfud4AYKTCAGKnxQBkqsgAYrDSAGuy0gBptdYAbbbWAGO32wBmttkAYbjdAG242QBwudkAc77fAE2+
        7QBWu+UAWrriAF254ABRvOkASr/wAEXA8wBIwPEAUMPzAGfH7wBtxOoAacbtAHfC4wB1w+QAcsTmAHjE
        5QBwxOgAfMrrAH3L7AB+ze4AZsfwAGLI8gBlyPEAa8rzAIafqwCIo64Akau2ANi0mADoroUA/7aIALjC
        vwDYwa0Ak8rfAI/P6QCN0OsAi9HtAIHR8wCC0vQAhNP2AITU9gCI0vEA3M7AANzSxgDZ0skA3NTKAP/n
        2AD/698AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGg53zZbba/3HE5/+D0/X/g9P1/4TU9v9VlrL/gtL0/4PS
        9f+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT9f+D0/X/hNT2/4TU9v+N0Ov//+vf/9zUyv8vY3nRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEaDne5jt9v/cMTo/4PT9f+D0/X/hNT2/0eE
        nv93w+T/g9L1/4PS9f+D0vX/g9P1/4PT9f+D0/X/g9P1/4PT9f+E1Pb/hNT2/4vR7f//59j/3M7A/yxf
        dc8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARoOe7GG43f9vxOn/g9P1/4PT
        9f+E0/b/fcvs/0aCnP9xutr/g9L1/4PS9f+D0/X/g9P1/4PT9f+D0/X/g9P1/4TU9v+E1Pb/iNLx/7jC
        v/+Tyt//J1luygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGg57sX7ne/27F
        6v+D0vX/g9P1/4TT9v+E1Pb/brfW/2Ckwv+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT9f+D0/X/hNT2/4TU
        9v+E1Pb/brfW/zBke9ElVmtHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEaD
        nuxdueD/bcXr/4PS9f+D0/X/hNP2/4TU9v9wutn/YqfF/4PS9f+D0vX/g9P1/4PT9f+D0/X/g9P1/4PT
        9f+D0/X/hNT2/4TU9v9RkKz/K150DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARoOe7Fu64f9sxev/g9L1/4PT9f+D0/X/hNT2/3C62f9ip8X/g9L1/4PS9f+D0vX/g9P1/4PT
        9f+D0/X/g9P1/4PT9f+E1Pb/hNT2/1OTrv8oWnAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGg57sWbrj/2vG7P+D0vX/g9P1/4PT9f+E1Pb/cLrZ/2Knxf+D0vX/g9L1/4PS
        9f+D0/X/g9P1/4PT9f+D0/X/g9P1/4TU9v+E1Pb/U5Ou/yhacAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWDnuxXu+T/asbt/4PS9f+D0/X/g9P1/4TT9v9wutn/YqfF/4PS
        9f+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT9f+D0/X/hNT2/4TU9v9Tk67/KFpwBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARYOe7FW75v9pxu7/g9L1/4PT9f+D0/X/hNP2/3C6
        2f9ip8X/gtL0/4PS9f+D0vX/g9P1/4PT9f+D0/X/g9P1/4PT9f+E1Pb/hNT2/1OTrv8oWnAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFg57sU7zo/2jH7v+C0vT/g9L1/4PT
        9f+E0/b/cLrZ/2Knxf+C0vT/g9L1/4PS9f+D0/X/g9P1/4PT9f+D0/X/g9P1/4PT9f+E1Pb/U5Ou/yha
        cAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWDnuxRven/Z8fv/4LS
        9P+D0vX/g9P1/4PT9f9wutn/YqfF/4LS9P+D0vX/g9L1/4PS9f+D0/X/g9P1/4PT9f+D0/X/g9P1/4TU
        9v9Tk67/KFpwBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARYOf7FC9
        6/9mx/D/gtL0/4PS9f+D0/X/g9P1/3C62f9ip8X/gtL0/4PS9f+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT
        9f+D0/X/hNT2/1OTrv8oWnAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABFg5/sTr7t/2XI8f+C0vT/g9L1/4PT9f+D0/X/cLrZ/2Knxf+C0vT/g9L1/4PS9f+D0vX/g9P1/4PT
        9f+D0/X/g9P1/4PT9f+E1Pb/U5Ou/yhacAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEWDn+xMv+7/Y8jy/4LS9P+D0vX/g9P1/4PT9f9wudn/YqfF/4LS9P+C0vT/g9L1/4PS
        9f+D0/X/g9P1/4PT9f+D0/X/g9P1/4TU9v9Tk67/KFpwBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARIOf7Eq/8P9iyPP/gtL0/4LS9P+D0vX/g9P1/3C52f9ip8X/gtL0/4LS
        9P+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT9f+D0/X/g9P1/1OTrv8oWnAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEg5/rSMDx/2LI8/+C0fT/gtL0/4PS9f+D0/X/cLnZ/2Kn
        xf+C0vT/gtL0/4PS9f+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT9f+D0/X/U5Ou/yhacAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESDn+dGwPP/Ysjz/4LR9P+C0vT/g9L1/4PT
        9f9wudn/YqfF/4LS9P+C0vT/g9L1/4PS9f+D0vX/g9P1/4PT9f+D0/X/g9P1/4PT9f9Tk67/KFpwBwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARIOf50bB8/9iyPP/gtH0/4LS
        9P+D0vX/g9P1/2631/9ip8X/gtL0/4LS9P+D0vX/g9L1/4PS9f+D0/X/g9P1/4PT9f+D0/X/g9P1/1OT
        rv8oWnAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEg5/nRcDz/2LI
        8/+C0fT/gtL0/4PS9f94xeb/P3mS/3O+3/+C0vT/gtL0/4LS9P+D0vX/g9L1/4PT9f+D0/X/g9P1/4PT
        9f+D0/X/U5Ou/ydZbgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESD
        n+dFwPP/a8rz/4LR9P9+ze//UpKu/0mGof94xOX/gtH0/4LS9P+C0vT/gtL0/4PS9f+D0vX/g9P1/4PT
        9f+D0/X/g9P1/37N7v84cIjxJFVqAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARIOf51DD8/+B0PP/XqLA/0aCnf9xutv/gtH0/4LR9P+C0fT/gtL0/4HR8/94xOX/a7LS/16h
        v/9QkKv/RYCa6zx1jsg0aoGmKVxygyhacDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHhJ/nYrDS/0eDnv9gpcP/bbbW/2Ckwv9Tk6//RoGc+zx0jd0zaYC6KVxymCdZ
        b3YnWW9TKVtxMClbcQ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACBPZNkeTGHPJVZrrSRVaoolV2xoJVZsRSZXbSMmV20EAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP+P////D/wf/g+AH/wIAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gA
        AD/4AAA/+AAAf/gAD//4B///
</value>
  </data>
</root>